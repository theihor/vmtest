
name: Incomplete kernel build workflow

on:
  workflow_dispatch:
    inputs:
      arch:
        required: true
        type: string
        description: The architecture to build against, e.g x86_64, aarch64, s390x...
        default: x86_64
      toolchain_full:
        required: true
        type: string
        description: The toolchain and for llvm, its version, e.g gcc, llvm-15
        default: gcc
      toolchain:
        required: true
        type: string
        description: The toolchain, e.g gcc, llvm
        default: gcc
      runs_on:
        required: true
        type: string
        description: The runners to run the test on. This is a json string representing an array of labels.
        default: ubuntu-20.04
      llvm-version:
        required: true
        type: string
        description: The version of LLVM used to build selftest.... for llvm toolchain, this should match the one from toolchain_full, for gcc it is an arbritrary version we decide to build selftests against.
        default: '17'
      kernel:
        required: true
        type: string
        description: The kernel to run the test against. For KPD this is always LATEST, which runs against a newly built kernel.
        default: LATEST
      download_sources:
        required: true
        type: boolean
        description: Whether to download the linux sources into the working directory.
        default: true
      release:
        required: false
        type: boolean
        description: Build selftest with -O2 optimization
        default: false

jobs:
  build:
    name: build for ${{ inputs.arch }} with ${{ inputs.toolchain_full }}${{ inputs.release && '-O2' || '' }}
    runs-on: ${{ inputs.runs_on }}
    timeout-minutes: 100
    env:
        KERNEL: ${{ inputs.kernel }}
        REPO_ROOT: ${{ github.workspace }}
        REPO_PATH: ""
        KBUILD_OUTPUT: kbuild-output/
    steps:
      - uses: actions/checkout@v4
        # We fetch an actual bit of history here to facilitate incremental
        # builds (which may check out some earlier upstream change).
        with:
          fetch-depth: 1
      - if: ${{ inputs.download_sources }}
        name: Download bpf-next tree
        uses: libbpf/ci/get-linux-source@main
        with:
          dest: '.kernel'
      - if: ${{ inputs.download_sources }}
        name: Move linux source in place
        shell: bash
        run: |
          rm -rf .kernel/.git
          cp -rf .kernel/. .
          rm -rf .kernel
      - name: Get commit meta-data
        id: get-commit-metadata
        run: |
          bash .github/scripts/get-commit-metadata.sh
      - name: Pull recent KBUILD_OUTPUT contents
        uses: actions/cache@v4
        with:
          path: ${{ env.KBUILD_OUTPUT }}
          key: kbuild-output-${{ inputs.arch }}-${{ inputs.toolchain_full }}-${{ steps.get-commit-metadata.outputs.branch }}-${{ steps.get-commit-metadata.outputs.timestamp }}-${{ steps.get-commit-metadata.outputs.commit }}
          restore-keys: |
            kbuild-output-${{ inputs.arch }}-${{ inputs.toolchain_full }}-${{ steps.get-commit-metadata.outputs.branch }}-${{ steps.get-commit-metadata.outputs.timestamp }}-
            kbuild-output-${{ inputs.arch }}-${{ inputs.toolchain_full }}-${{ steps.get-commit-metadata.outputs.branch }}-
            kbuild-output-${{ inputs.arch }}-${{ inputs.toolchain_full }}-
      - name: Prepare incremental build
        shell: bash
        run: |
          bash .github/scripts/prepare-incremental-builds.sh ${{ steps.get-commit-metadata.outputs.commit }}
